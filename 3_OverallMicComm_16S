rm(list=ls())
getwd()
setwd("D:/Prague/4. Norway/R") #PC

library("phyloseq")
library("vegan")
library("DESeq2")
library("ggplot2")
library("dendextend")
library("tidyr")
library("viridis")
library("reshape")
library("plyr")
library("data.table")
library("stringr")
library(dplyr)

#Read in 16S data
count_tab <- read.table("ASVs_counts_nohit_nochloro_nomito_nocontam_16S_blk1contam.tsv", sep="\t",header=T, row.names=1)[ , -c(61:62, 183:184)] #removes the blank samples
tax_tab <- as.matrix(read.table("ASVs_taxonomy_nohit_nochloro_nomito_nocontam_16S_blk1contam.tsv", header=T, row.names=1, sep="\t"))
sample_info_tab <- read.table("sample_info_both.txt", sep="\t",header=T)
soil_chem <- read.table("soil_chemistry_both.txt", sep="\t",header=T)
load("Climate2.0.Rda")
colnames(Climate)
load("Mveg_2019.RDa")
colnames(Mveg)
load("dataHeight_2019.RDa")
colnames(dataHeight)

#Make transformations in soil chem data
soil_chem$tNH4 <- log(soil_chem$NH4+0.001)
soil_chem$tNO3 <- log(soil_chem$NO3+0.001)
soil_chem$tC <- sqrt(soil_chem$C)
soil_chem$tCa <- log(soil_chem$Ca)
soil_chem$tMg <- log(soil_chem$Mg)
soil_chem$tK <- log(soil_chem$K)
soil_chem$tP <- log(soil_chem$P)

#Calculate total reads
df <- data.frame(rowSums(t(count_tab)))
colnames(df) <- c("total_reads")
df$sample.code <- row.names(df)

#Merge with alpha div and SI
load("SI_16S_both_rare_noprune_ss1234.RDa")
load("adiv_16S_both_ss1234.RDa")
head(SI_16S)
head(adiv_16S)
SI <- SI_16S[, c(1,3)]
adiv <- adiv_16S[, c(1:3)]
temp <- merge(df, SI, id = c("sample.code"), all=T)
temp2 <- merge(temp, adiv, id = c("sample.code"), all=T)
temp3 <- merge(soil_chem, temp2, id = c("sample.code"), all=T)
temp3$Treatment <- NULL
temp3$Compartment <- NULL
#temp <- merge(df, soil_chem, id = c("sample.code"), all=T)

#Merge soil chemistry to sample info tab
sample_info_tab <- merge(sample_info_tab, temp3, id = c("sample.code"), all=T)
row.names(sample_info_tab) <- sample_info_tab$sample.code

#Add climate variables to sample info
head(Climate)
head(sample_info_tab)
sample_info_tab <- merge(sample_info_tab, Climate, by = c("location"), all = T)

#Merge to vegetation cover
sample_info_tab <- merge(sample_info_tab, Mveg, by = c("T.grid", "P.grid", "location", "siteID"), all = T)

#Merge to height and moss cover
sample_info_tab <- merge(sample_info_tab, dataHeight[,-c(1:8)], by = c("location"), all = T)
sample_info_tab <- merge(sample_info_tab, dataCover[,-c(1)], by = c("location"), all = T)
head(sample_info_tab)

#Check tables
str(count_tab)
str(tax_tab)
str(sample_info_tab)
sample_info_tab$precipitation <- as.numeric(sample_info_tab$precipitation)
sample_info_tab$treatment <- factor(paste(sample_info_tab$precipitation, sample_info_tab$temperature, sep = "_"))
sample_info_tab$comp_treat <- factor(paste(sample_info_tab$compartment, sample_info_tab$treatment, sep = "_"))

#Match count table column order to order in sample info tab
row.names(sample_info_tab) <- sample_info_tab$sample.code
colnames(count_tab)
setcolorder(count_tab, as.character(row.names(sample_info_tab)))

#Add colours
levels(sample_info_tab$treatment)
sample_info_tab$colour <- revalue(sample_info_tab$treatment, c("600_10.5" = "#D55E00", "600_8.5" = "red", "600_6.5" = "#CC79A7",
                                                               "1200_10.5" = "#E69F00", "1200_8.5" = "orange", "1200_6.5" = "#F0E442",
                                                               "2000_10.5" = "#009E73", "2000_8.5" = "#33CC33", "2000_6.5" = "#99FF66",
                                                               "2700_10.5" = "#0072B2", "2700_8.5" = "blue", "2700_6.5" = "#56B4E9"))
sample_info_tab$colour_precip <- revalue(factor(sample_info_tab$precipitation), c("600" = "#D55E00", "1200" = "#E69F00", "2000" = "#009E73", "2700" = "#0072B2"))
sample_info_tab$colour_temp <- revalue(factor(sample_info_tab$temperature), c("10.5" = "#D55E00", "8.5" = "#009E73", "6.5" = "#0072B2"))

#Make phyloseq object
count_tab_phy <- otu_table(count_tab, taxa_are_rows=T)
tax_tab_phy <- tax_table(tax_tab)
sample_info_tab_phy <- sample_data(sample_info_tab)
ASV_physeq <- phyloseq(count_tab_phy, tax_tab_phy, sample_info_tab_phy)

#Prune taxa
ps <- prune_taxa(taxa_sums(ASV_physeq) > 100, ASV_physeq)
ASV_physeq <- ps

#Calculate sample sums to add to sample info
tot_reads <- data.frame(sample_sums(ASV_physeq))
str(tot_reads)
#save(tot_reads, file="tot_reads_16S.txt")

#Remove samples below 1000 reads
sum(sample_sums(ASV_physeq)<1000) #0
sum(sample_sums(ASV_physeq)<2000) #0

#Remove GUD.6 as it is likely not Festuca
#Remove VIK.R.8 as it is much too close to rhizosphere soil samples = outlier
ps <- subset_samples(ASV_physeq, !sample.code %in% c("GUD.S6", "GUD.R.6", "VIK.R.8"))
ASV_physeq <- ps

#Remove replicates 9 and 10, because this was a different batch and they are really weird
temp <- subset_samples(ASV_physeq, !sample.code %in% paste0(c(unique(sample_info_tab$location), "ULV2"), ".S", 9))
temp2 <- subset_samples(temp, !sample.code %in% paste0(c(unique(sample_info_tab$location), "ULV2"), ".S", 10))
temp3 <- subset_samples(temp2, !sample.code %in% paste0(c(unique(sample_info_tab$location), "ULV2"), ".R.", 9))
temp4 <- subset_samples(temp3, !sample.code %in% paste0(c(unique(sample_info_tab$location), "ULV2"), ".R.", 10))
ASV_physeq <- temp4

#Make clr physeq objects
#clr transformation
clr_counts <- microbiome::transform(otu_table(ASV_physeq), "clr")
clr_count_phy <- otu_table(clr_counts, taxa_are_rows=T)
clr_physeq <- phyloseq(clr_count_phy, sample_info_tab_phy)
clr_count_phy6 <- otu_table(clr_counts+6, taxa_are_rows=T)
clr_physeq6 <- phyloseq(clr_count_phy6, sample_info_tab_phy)

#Hellinger transformation
#hel_counts <- microbiome::transform(otu_table(ASV_physeq), "hellinger")
#hel_count_phy <- otu_table(hel_counts, taxa_are_rows=T)
#hel_physeq <- phyloseq(hel_count_phy, sample_info_tab_phy)

#########################################END OF DATA HANDLING################################################
#####1 beta-diversity#####
#For rhizosphere and root separately and with environmental parameters
#Subset for rhizosphere and root
clr_physeq_rhizo <- subset_samples(clr_physeq, compartment=="rhizosphere")
clr_physeq_root <- subset_samples(clr_physeq, compartment=="root")

######Using PCA - Rhizosphere#####
#Using PCA
clr_PCA_rhizo <- ordinate(clr_physeq_rhizo, "RDA")
eigen_vals_rhizo <- clr_PCA_rhizo$CA$eig # allows us to scale the axes according to their magnitude of separating apart the samples
eigen_vals_rhizo_perc <- sapply(clr_PCA_rhizo$CA$eig[1:5], function(x) x / sum(clr_PCA_rhizo$CA$eig)) 
clr1 <- clr_PCA_rhizo$CA$eig[1] / sum(clr_PCA_rhizo$CA$eig)
clr2 <- clr_PCA_rhizo$CA$eig[2] / sum(clr_PCA_rhizo$CA$eig)
plot_ordination(clr_physeq_rhizo, clr_PCA_rhizo, type="samples", color="location") + 
  geom_point(size = 2) +
  coord_fixed(clr2 / clr1) +
  stat_ellipse(aes(group = location), linetype = 2)

plot_ordination(clr_physeq_rhizo, clr_PCA_rhizo, color="treatment") + 
  geom_point(size=1) + labs(col="type") + 
  geom_text(aes(label=sample_data(clr_physeq)$sample.code[which(sample_data(clr_physeq)$compartment=="rhizosphere")], hjust=0.3, vjust=-0.4)) + 
  coord_fixed(clr2 / clr1) + ggtitle("PCA - rhizosphere") + 
  #scale_color_manual(values= c("#D55E00", "#F0E442", "#E69F00", "#009E73", "#56B4E9", "#0072B2")) + 
  theme(legend.position="none")
#stat_ellipse(aes(group = treatment), linetype = 2)

#With centroids
#Make data frame and asv table to merge
sample_data_df <- data.frame(phyloseq::sample_data(clr_physeq_rhizo))
asv_df <- as.data.frame(t(phyloseq::otu_table(clr_physeq_rhizo)))
asv_df$sample.code <- row.names(asv_df)
asv_df_2 <- merge(sample_data_df, asv_df, by = c("sample.code"))
str(asv_df_2)
head(asv_df_2)

#Calculate site-level centroids (mean clr values per ASV per site)
colnames(asv_df_2)
library(dplyr)
detach(package:plyr)
location_means <- asv_df_2 %>%
  group_by(location, temperature, precipitation, T.grid, P.grid) %>%
  summarise(across(starts_with("ASV_"),mean , na.rm = TRUE))

#Make distance matrix
length(colnames(location_means))
dist_matrix_eucl <- dist(location_means[6:4514], method = "euclidean")

#Run permutations on centroids with temperature and precipitation as continious variables
adonis2(
  dist_matrix_eucl ~ T.grid * P.grid,
  data = location_means,
  permutations = 9999
)

#Adding environmental variables
head(Mveg)
envfit(clr_PCA_rhizo ~ NH4 + N_NH4 + tNH4 + NO3 + N_NO3 + tNO3 + NO2 + N_NO2 + pH_H2O + N + C + tC + 
         Ca + tCa + Mg + tMg + K + tK + P + tP + total_reads + avgSI + Shannon + Observed +
         soil.maxTJuly + cm200.maxTJuly + soil.cvTJuly_within + cm200.cvTJuly_within +
         meanSM_12yr + meanSMsummer_12yr + meanSMwinter_12yr +
         soil.meanTJuly + above.meanTJuly + cm30.meanTJuly + cm200.meanTJuly + days_after_defrosting + meanSMwinter + 
         T.grid + P.grid + elevation + longitude + latitude +
         Festuca_cover + forb_cover + graminoid_cover + pteridophyte_cover + woody_cover, 
       data = data.frame(sample_data(clr_physeq_rhizo)), perm = 999, na.rm=TRUE)

#Plant community variables
#To add
PCA.env_rhizo <- envfit(clr_PCA_rhizo ~ P.grid + T.grid +
                          tNH4 + tNO3 + NO2 + pH_H2O + N + tC + 
                          tCa + tMg + tK + tP + avgSI + Shannon + Observed +
                          soil.meanT_12yr + soil.cvT_12yr_between +
                          cm200.meanT_12yr + cm200.cvT_12yr_between +
                          meanSM_12yr + cvSM_12yr_between +
                          difSM_12yr + soil.difT_12yr + cm200.difT_12yr +
                          mNMDS1 + mNMDS2,
                        data = data.frame(sample_data(clr_physeq_rhizo)), perm = 999, na.rm=TRUE)
PCA.env_rhizo <- envfit(clr_PCA_rhizo ~ P.grid + T.grid,
                        data = data.frame(sample_data(clr_physeq_rhizo)), perm = 999, na.rm=TRUE,
                        strata = data.frame(sample_data(clr_physeq_rhizo))$location)
env.scores_rhizo <- scores(PCA.env_rhizo, "vectors") %>% round(., 3)  %>% as.data.frame() 
p_values <- PCA.env_rhizo$vectors[4]
p_values <- melt(p_values)
colnames(p_values) <- c("p", "L1")
env.scores_rhizo <- cbind(env.scores_rhizo, p_values[1])

#Test using centroids
#Average PCA scores 1 and 2, and merge to location_means
scr12 <- data.frame(scores(clr_PCA_rhizo)$sites)
scr12$sample.code <- rownames(scr12)
scr12 <- merge(sample_data_df, scr12, by = c("sample.code"))

#Calculate means
scr12_means <- scr12 %>%
  group_by(location) %>%
  summarise(mPC1 = mean(PC1, na.rm = TRUE),
            mPC2 = mean(PC2, na.rm=TRUE))

#Merge
scr12_means <- merge(scr12_means, location_means, by = c("location"))
str(scr12_means)

#Run envfit on centroids
PCA.env_rhizo_cent <- envfit(scr12_means[2:3] ~ T.grid,
                        data = location_means, perm = 999, na.rm=TRUE) #Only T.grid significant, so remove P.grid for figure

#Make env scores for plot
env.scores_rhizo_cent <- scores(PCA.env_rhizo_cent, "vectors") %>% round(., 3)  %>% as.data.frame() 
p_values <- PCA.env_rhizo_cent$vectors[4]
p_values <- melt(p_values)
colnames(p_values) <- c("p", "L1")
env.scores_rhizo_cent <- cbind(env.scores_rhizo_cent, p_values[1])

#Rhizosphere
#Make df for plot
temp <- data.frame(scores(clr_PCA_rhizo)$sites)
dfplot_rhizo <- merge(temp, data.frame(sample_data(clr_physeq_rhizo)), by = "row.names")
str(dfplot_rhizo)

#Centroids
cent_rhizo <- aggregate(cbind(PC1, PC2) ~ comp_treat, data = dfplot_rhizo, FUN = mean)
cent_rhizo$compartment <- str_split_fixed(cent_rhizo$comp_treat, "_", 3)[,1]
cent_rhizo$precip <- str_split_fixed(cent_rhizo$comp_treat, "_", 3)[,2]
cent_rhizo$temperature <- str_split_fixed(cent_rhizo$comp_treat, "_", 3)[,3]
segs_rhizo <- merge(dfplot_rhizo, setNames(cent_rhizo, c('comp_treat','oAxis.1','oAxis.2')),
                    by = 'comp_treat', sort = FALSE)

DEF <- 10

tmp.colours <- colorRampPalette(c("pink", "red", "#ba0000"))(3)

plot16S_rhizo <- ggplot(dfplot_rhizo, aes(x = PC1, y = PC2)) + 
  geom_hline(yintercept=0, linetype="longdash", colour="darkgrey", size=0.4)+
  geom_vline(xintercept=0, linetype="longdash", colour="darkgrey", size=0.4)+
  geom_segment(data = segs_rhizo,
               mapping = aes(xend = oAxis.1, yend = oAxis.2, colour=factor(temperature)), lwd = 0.6) + # spiders
  scale_colour_manual(values=c("#FFB380", "#FF4D4D", "#800000"), name="Temperature")+
  geom_point(data=dfplot_rhizo, aes(x = PC1, y = PC2, fill=factor(temperature), shape=factor(precipitation)), size=2)+
  ggtitle("Prokaryotes - rhizosphere") +
  scale_fill_manual(values=c("#FFB380", "#FF4D4D", "#800000"), name="Temperature")+
  scale_shape_manual(values=c(24, 21, 22, 25), name="Precipitation")+
  geom_point(data = cent_rhizo, size = 4.5, aes(fill=factor(temperature), shape=factor(precip))) +
  geom_segment(data=env.scores_rhizo_cent, aes(x=0, y=0, xend=mPC1*DEF, yend=mPC2*DEF), 
               arrow=arrow(length = unit(0.03, "npc")), lwd=0.7) + 
  geom_text(data=env.scores_rhizo_cent, aes(x=mPC1*DEF, y=mPC2*DEF), label= c("Temperature *"), nudge_y = 0.5, nudge_x = -0.75, size=4)  + 
  xlab("PCA 1 - 9.4%")+ 
  ylab("PCA 2 - 7.7%")+
  theme_bw() +
  theme(axis.title.y=element_text(size=11, colour = "black", margin=(margin(0,10,0,0))))+
  theme(axis.title.x=element_text(size=11, colour = "black", margin=(margin(10,0,0,0))))+
  theme(axis.text=element_text(size=10))+
  theme(panel.grid.minor = element_blank())+
  theme(panel.grid.major = element_blank())
plot16S_rhizo

#####Using PCA - Root#####
clr_PCA_root <- ordinate(clr_physeq_root, "RDA")
eigen_vals_root <- clr_PCA_root$CA$eig # allows us to scale the axes according to their magnitude of separating apart the samples
eigen_vals_root_perc <- sapply(clr_PCA_root$CA$eig[1:5], function(x) x / sum(clr_PCA_root$CA$eig)) 
clr1 <- clr_PCA_root$CA$eig[1] / sum(clr_PCA_root$CA$eig)
clr2 <- clr_PCA_root$CA$eig[2] / sum(clr_PCA_root$CA$eig)
plot_ordination(clr_physeq_root, clr_PCA_root, type="samples", color="location") + 
  geom_point(size = 2) +
  coord_fixed(clr2 / clr1) +
  stat_ellipse(aes(group = location), linetype = 2)

plot_ordination(clr_physeq_root, clr_PCA_root, color="treatment") + 
  geom_point(size=1) + labs(col="type") + 
  geom_text(aes(label=sample_data(clr_physeq)$sample.code[which(sample_data(clr_physeq)$compartment=="root")], hjust=0.3, vjust=-0.4)) + 
  coord_fixed(clr2 / clr1) + ggtitle("PCA - rootsphere") + 
  #scale_color_manual(values= c("#D55E00", "#F0E442", "#E69F00", "#009E73", "#56B4E9", "#0072B2")) + 
  theme(legend.position="none")
#stat_ellipse(aes(group = treatment), linetype = 2)

#With centroids
#Make data frame and asv table to merge
sample_data_df <- data.frame(phyloseq::sample_data(clr_physeq_root))
asv_df <- as.data.frame(t(phyloseq::otu_table(clr_physeq_root)))
asv_df$sample.code <- row.names(asv_df)
asv_df_2 <- merge(sample_data_df, asv_df, by = c("sample.code"))
str(asv_df_2)
head(asv_df_2)

#Calculate site-level centroids (mean clr values per ASV per site)
colnames(asv_df_2)
location_means <- asv_df_2 %>%
  group_by(location, temperature, precipitation, T.grid, P.grid) %>%
  summarise(across(starts_with("ASV_"),mean , na.rm = TRUE))

#Make distance matrix
length(colnames(location_means))
dist_matrix_eucl <- dist(location_means[6:2666], method = "euclidean")

#Run permutations on centroids
adonis2(
  dist_matrix_eucl ~ T.grid * P.grid,
  data = location_means,
  permutations = 999
)

#PCA root
#Plant community variables
#To add
PCA.env_root <- envfit(clr_PCA_root ~ P.grid + T.grid +
                         tNH4 + tNO3 + NO2 + pH_H2O + N + tC + 
                         tCa + tMg + tK + tP + avgSI + Shannon + Observed +
                         soil.meanT_12yr + soil.cvT_12yr_within + soil.cvT_12yr_between +
                         cm200.meanT_12yr + cm200.cvT_12yr_within + cm200.cvT_12yr_between +
                         soil.cvTwinter_12yr_within + soil.cvTsummer_12yr_within +
                         cm200.cvTwinter_12yr_within + cm200.cvTsummer_12yr_within +
                         meanSM_12yr + cvSM_12yr_within + cvSM_12yr_between +
                         days_after_defrosting +
                         difSM_12yr + soil.difT_12yr + cm200.difT_12yr +
                         betaSM_12yr + above.betaTsummer_12yr + above.betaTwinter_12yr +
                         mNMDS1 + mNMDS2,
                       data = data.frame(sample_data(clr_physeq_root)), perm = 999, na.rm=TRUE)
PCA.env_root <- envfit(clr_PCA_root ~ T.grid + P.grid,
                       data = data.frame(sample_data(clr_physeq_root)), perm = 999, na.rm=TRUE,
                       strata = data.frame(sample_data(clr_physeq_root))$location)
env.scores_root <- scores(PCA.env_root, "vectors") %>% round(., 3)  %>% as.data.frame() 
p_values <- PCA.env_root$vectors[4]
p_values <- melt(p_values)
colnames(p_values) <- c("p", "L1")
env.scores_root <- cbind(env.scores_root, p_values[1])

#Test using centroids
#Average PCA scores 1 and 2, and merge to location_means
scr12 <- data.frame(scores(clr_PCA_root)$sites)
scr12$sample.code <- rownames(scr12)
scr12 <- merge(sample_data_df, scr12, by = c("sample.code"))

#Calculate means
scr12_means <- scr12 %>%
  group_by(location) %>%
  summarise(mPC1 = mean(PC1, na.rm = TRUE),
            mPC2 = mean(PC2, na.rm=TRUE))

#Merge
scr12_means <- merge(scr12_means, location_means, by = c("location"))
str(scr12_means)

#Run envfit on centroids
PCA.env_root_cent <- envfit(scr12_means[2:3] ~ T.grid + P.grid,
                             data = location_means, perm = 999, na.rm=TRUE) #No significance

#Make env scores for plot
env.scores_root_cent <- scores(PCA.env_root_cent, "vectors") %>% round(., 3)  %>% as.data.frame() 
p_values <- PCA.env_root_cent$vectors[4]
p_values <- melt(p_values)
colnames(p_values) <- c("p", "L1")
env.scores_root_cent <- cbind(env.scores_root_cent, p_values[1])

#Make df for plot
temp <- data.frame(scores(clr_PCA_root)$sites)
dfplot_root <- merge(temp, data.frame(sample_data(clr_physeq_root)), by = "row.names")
str(dfplot_root)

#Centroids
cent_root <- aggregate(cbind(PC1, PC2) ~ comp_treat, data = dfplot_root, FUN = mean)
cent_root$compartment <- str_split_fixed(cent_root$comp_treat, "_", 3)[,1]
cent_root$precip <- str_split_fixed(cent_root$comp_treat, "_", 3)[,2]
cent_root$temperature <- str_split_fixed(cent_root$comp_treat, "_", 3)[,3]
segs_root <- merge(dfplot_root, setNames(cent_root, c('comp_treat','oAxis.1','oAxis.2')),
                   by = 'comp_treat', sort = FALSE)

DEF <- 10 #increase visualisation

plot16S_root <- ggplot(dfplot_root, aes(x = PC1, y = PC2)) + 
  geom_hline(yintercept=0, linetype="longdash", colour="darkgrey", size=0.4)+
  geom_vline(xintercept=0, linetype="longdash", colour="darkgrey", size=0.4)+
  geom_segment(data = segs_root,
               mapping = aes(xend = oAxis.1, yend = oAxis.2, colour=factor(temperature)), lwd = 0.6) + # spiders
  geom_point(data=dfplot_root, aes(x = PC1, y = PC2, fill=factor(temperature), shape=factor(precipitation)), size=2)+
  ggtitle("Prokaryotes - root") +
  scale_fill_manual(values=c("#FFB380", "#FF4D4D", "#800000"), name="Temperature")+
  scale_colour_manual(values=c("#FFB380", "#FF4D4D", "#800000"), name="Temperature")+
  scale_shape_manual(values=c(24, 21, 22, 25), name="Precipitation")+
  geom_point(data = cent_root, size = 4.5, aes(fill=factor(temperature), shape=factor(precip))) +
  xlab("PCA 1 - 10.4%")+ 
  ylab("PCA 2 - 4.6%")+
  theme_bw() +
  theme(axis.title.y=element_text(size=11, colour = "black", margin=(margin(0,10,0,0))))+
  theme(axis.title.x=element_text(size=11, colour = "black", margin=(margin(10,0,0,0))))+
  theme(axis.text=element_text(size=10))+
  theme(panel.grid.minor = element_blank())+
  theme(panel.grid.major = element_blank())

plot16S_root

#Put together
library(cowplot)
prowAB <- plot_grid(plot16S_rhizo + theme(legend.position="none"), plot16S_root+ theme(legend.position="none"), labels=c("A", "C"), align="hv", label_size=12, vjust=1.1,
                    nrow=1)
legend <- get_legend(plot16S_rhizo + theme(legend.box.margin = margin(0, 0, 0, 12)))
prow <- plot_grid(prowAB, legend, ncol = 2, rel_widths = c(2,.4))
prow
#save_plot("D:/Prague/4. Norway/MS/Figs/Fig_PCA_16S_redtones2.png", prow,
 #         ncol = 3, nrow = 1, base_aspect_ratio = 1, dpi=600)


#####2 Alphadiversity#####
#Make physeq without cut off 100
ASV_physeq_2 <- phyloseq(count_tab_phy, tax_tab_phy, sample_info_tab_phy)

#Should run again without VIK.R.8? But shouldn't matter right?
#Remove GUD.6 as it is likely not Festuca
ps <- subset_samples(ASV_physeq_2, !sample.code %in% c("GUD.S6", "GUD.R.6"))
ASV_physeq_2 <- ps

#Remove replicates 9 and 10, because this was a different batch and they are really weird
temp <- subset_samples(ASV_physeq_2, !sample.code %in% paste0(c(unique(sample_info_tab$location), "ULV2"), ".S", 9))
temp2 <- subset_samples(temp, !sample.code %in% paste0(c(unique(sample_info_tab$location), "ULV2"), ".S", 10))
temp3 <- subset_samples(temp2, !sample.code %in% paste0(c(unique(sample_info_tab$location), "ULV2"), ".R.", 9))
temp4 <- subset_samples(temp3, !sample.code %in% paste0(c(unique(sample_info_tab$location), "ULV2"), ".R.", 10))
ASV_physeq_2 <- temp4

#Make subsets
physeq_rhizo_2 <- subset_samples(ASV_physeq_2, compartment=="rhizosphere")
physeq_root_2 <- subset_samples(ASV_physeq_2, compartment=="root")

#Rarefaction curves
rarecurve(t(otu_table(physeq_rhizo_2)), step=100, col=sample_info_tab$colour, lwd=2, ylab="ASVs", label=F)
rarecurve(t(otu_table(physeq_root_2)), step=100, col=sample_info_tab$colour, lwd=2, ylab="ASVs", label=F)

#Richness and diversity
plot_richness(physeq_rhizo_2, x="location", color="location", measures=c("Chao1", "Shannon")) + 
  #scale_color_manual(values=c("#D55E00", "#F0E442", "#E69F00", "#009E73", "#56B4E9", "#0072B2")) +
  theme(legend.title = element_blank())

plot_richness(physeq_root_2, x="location", color="treatment", measures=c("Chao1", "Shannon")) + 
  #scale_color_manual(values=c("#D55E00", "#F0E442", "#E69F00", "#009E73", "#56B4E9", "#0072B2")) +
  theme(legend.title = element_blank())

#Make data frame with observed and shannon alpha div based on rarefaction
library(metagMisc)
#count_tab_phy_noprune <- otu_table(count_tab_nonprune, taxa_are_rows=T)
#tax_tab_phy <- tax_table(tax_tab)
#OTU_physeq_noprune <- phyloseq(count_tab_phy_noprune, tax_tab_phy, sample_info_tab_phy)

#Check range
range(sample_sums(physeq_rhizo_2))
range(sample_sums(physeq_root_2))

set.seed(1234)
alpha_div_16S_rhizo <- phyloseq_mult_raref_div(physeq_rhizo_2, SampSize = min(sample_sums(physeq_root_2)),
                                         iter = 1000, divindex = c("Observed", "Shannon"), parallel = FALSE,
                                         verbose = TRUE)
#save(alpha_div_16S_rhizo, file = "alpha_div_16S_rhizo_ss1234.RDa")

set.seed(1234)
alpha_div_16S_root <- phyloseq_mult_raref_div(physeq_root_2, SampSize = min(sample_sums(physeq_root_2)),
                                               iter = 1000, divindex = c("Observed", "Shannon"), parallel = FALSE,
                                               verbose = TRUE)
#Save
#save(alpha_div_16S_root, file = "alpha_div_16S_root_ss1234.RDa")

#Load files
load("alpha_div_16S_rhizo_ss1234.RDa")
load("alpha_div_16S_root_ss1234.RDa")

#Data frame with alpha div measures
str(alpha_div_16S_rhizo)
str(alpha_div_16S_root)
adiv_16S_rhizo <- spread(alpha_div_16S_rhizo[1:3], Index, Estimate)
adiv_16S_root <- spread(alpha_div_16S_root[1:3], Index, Estimate)
head(adiv_16S_rhizo)
colnames(adiv_16S_rhizo) <- c("sample.code", "Observed", "Shannon")
colnames(adiv_16S_root) <- c("sample.code", "Observed", "Shannon")
temp <- sample_data(physeq_rhizo_2)
temp2 <- sample_data(physeq_root_2)
adiv_16S_rhizo <- merge(adiv_16S_rhizo, data.frame(temp)[,c(1:9)], by = c("sample.code"))
adiv_16S_root <- merge(adiv_16S_root, data.frame(temp2)[,c(1:9)], by = c("sample.code"))

#Save so can be added to PCoA [later]
#Save as seperate rhizo and root, as well as, rhizo and root together
adiv_16S_rhizo$compartment <- "rhizosphere"
adiv_16S_root$compartment <- "root"
adiv_16S <- rbind(adiv_16S_rhizo, adiv_16S_root)
#save(adiv_16S_rhizo, file = "adiv_16S_rhizo_ss1234.RDa")
#save(adiv_16S_root, file = "adiv_16S_root_ss1234.RDa")
#save(adiv_16S, file = "adiv_16S_both_ss1234.RDa")

load("adiv_16S_rhizo.RDa")
load("adiv_16S_root.RDa")
load("adiv_16S_both.RDa")

head(adiv_16S)

#Make boxplots
head(adiv_16S_rhizo)
plot <- ggplot(data=adiv_16S, aes(x=as.factor(temperature), y=Shannon, fill = as.factor(compartment)))+
  #annotate("rect", fill = "grey", alpha = 0.6, xmin = -Inf, xmax = 2012,ymin = -Inf, ymax = Inf) +
  facet_wrap(~ as.factor(precipitation)) +
  geom_boxplot() +
  #scale_shape_manual(values=c(19,1)) +
  scale_colour_manual(values=c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7"), name="Cluster")+
  scale_fill_manual(values=c("#E69F00", "#009E73", "#0072B2", "#D55E00", "#999999", "#56B4E9", "#CC79A7"), name="Compartment")+
  theme_bw() +
  theme(axis.title.y=element_text(size=11, colour = "black", margin=(margin(0,10,0,0))))+
  theme(axis.title.x=element_text(size=11, colour = "black", margin=(margin(0,10,0,0))))+
  theme(axis.text=element_text(size=10, angle = 90, hjust = 1))+
  theme(panel.grid.minor = element_blank())+
  theme(panel.grid.major = element_blank())+
  theme(strip.text.x=element_text(size=10), strip.background=element_rect(fill="grey"))
plot

plot <- ggplot(data=adiv_16S, aes(x=as.factor(precipitation), y=Shannon, fill = as.factor(compartment)))+
  #annotate("rect", fill = "grey", alpha = 0.6, xmin = -Inf, xmax = 2012,ymin = -Inf, ymax = Inf) +
  facet_wrap(~ as.factor(temperature)) +
  geom_boxplot() +
  #scale_shape_manual(values=c(19,1)) +
  scale_colour_manual(values=c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7"), name="Cluster")+
  scale_fill_manual(values=c("#E69F00", "#009E73", "#0072B2", "#D55E00", "#999999", "#56B4E9", "#CC79A7"), name="Compartment")+
  theme_bw() +
  theme(axis.title.y=element_text(size=11, colour = "black", margin=(margin(0,10,0,0))))+
  theme(axis.title.x=element_text(size=11, colour = "black", margin=(margin(0,10,0,0))))+
  theme(axis.text=element_text(size=10, angle = 90, hjust = 1))+
  theme(panel.grid.minor = element_blank())+
  theme(panel.grid.major = element_blank())+
  theme(strip.text.x=element_text(size=10), strip.background=element_rect(fill="grey"))
plot

#Observed
plot <- ggplot(data=adiv_16S, aes(x=as.factor(temperature), y=Observed, fill = as.factor(compartment)))+
  #annotate("rect", fill = "grey", alpha = 0.6, xmin = -Inf, xmax = 2012,ymin = -Inf, ymax = Inf) +
  facet_wrap(~ as.factor(precipitation)) +
  geom_boxplot() +
  #scale_shape_manual(values=c(19,1)) +
  scale_colour_manual(values=c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7"), name="Cluster")+
  scale_fill_manual(values=c("#E69F00", "#009E73", "#0072B2", "#D55E00", "#999999", "#56B4E9", "#CC79A7"), name="Compartment")+
  theme_bw() +
  theme(axis.title.y=element_text(size=11, colour = "black", margin=(margin(0,10,0,0))))+
  theme(axis.title.x=element_text(size=11, colour = "black", margin=(margin(0,10,0,0))))+
  theme(axis.text=element_text(size=10, angle = 90, hjust = 1))+
  theme(panel.grid.minor = element_blank())+
  theme(panel.grid.major = element_blank())+
  theme(strip.text.x=element_text(size=10), strip.background=element_rect(fill="grey"))
plot

plot <- ggplot(data=adiv_16S, aes(x=as.factor(precipitation), y=Observed, fill = as.factor(compartment)))+
  #annotate("rect", fill = "grey", alpha = 0.6, xmin = -Inf, xmax = 2012,ymin = -Inf, ymax = Inf) +
  facet_wrap(~ as.factor(temperature)) +
  geom_boxplot() +
  #scale_shape_manual(values=c(19,1)) +
  scale_colour_manual(values=c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7"), name="Cluster")+
  scale_fill_manual(values=c("#E69F00", "#009E73", "#0072B2", "#D55E00", "#999999", "#56B4E9", "#CC79A7"), name="Compartment")+
  theme_bw() +
  theme(axis.title.y=element_text(size=11, colour = "black", margin=(margin(0,10,0,0))))+
  theme(axis.title.x=element_text(size=11, colour = "black", margin=(margin(0,10,0,0))))+
  theme(axis.text=element_text(size=10, angle = 90, hjust = 1))+
  theme(panel.grid.minor = element_blank())+
  theme(panel.grid.major = element_blank())+
  theme(strip.text.x=element_text(size=10), strip.background=element_rect(fill="grey"))
plot

#Add statistics
#Want: lm or lme? div ~ temperature * precipitation * compartment, random = location probably
library(nlme)
library(car)
library(lme4)

#With both root and rhizo
head(adiv_16S)
str(adiv_16S)
adiv_16S$location <- as.factor(adiv_16S$location)
adiv_16S$compartment <- as.factor(adiv_16S$compartment)
adiv_16S$temperature <- as.factor(adiv_16S$temperature)
adiv_16S$precipitation <- as.factor(adiv_16S$precipitation)

#Simple lm
m1 <- lm(Observed ~ temperature * precipitation * compartment, data=adiv_16S)
qqnorm(resid(m1))
plot(m1)
Anova(m1, type = 3)

m1 <- lm(Shannon ~ temperature * precipitation * compartment, data=adiv_16S)
qqnorm(resid(m1))
plot(m1)
Anova(m1, type = 3)

#With random location
m1 <- lme(Observed ~ temperature * precipitation * compartment, random = ~1|location, data=adiv_16S)
qqnorm(resid(m1))
plot(m1)
Anova(m1, type = 3)

m1 <- lme(Shannon ~ temperature * precipitation * compartment, random = ~1|location, data=adiv_16S)
qqnorm(resid(m1))
plot(m1)
Anova(m1, type = 3)

#Emmeans
library(emmeans)
m1 <- lm(Shannon ~ temperature * precipitation * compartment, data=adiv_16S) #Can only be done without random location effect
emmeans(m1, pairwise ~ temperature * compartment | precipitation)

m1 <- lm(Observed ~ temperature * precipitation * compartment, data=adiv_16S) #Can only be done without random location effect
emmeans(m1, pairwise ~ temperature * compartment | precipitation)


#############################3 CALCULATE GENERALIST/SPECIALIST##################################
#Following Chen et al. (2021) and Devictor et al. (2008)
#Make physeq without cut off 100
ASV_physeq_3 <- phyloseq(count_tab_phy, tax_tab_phy, sample_info_tab_phy)

#Remove samples below 1000 reads
ps <- prune_samples(sample_sums(ASV_physeq_3) > 1000, ASV_physeq_3) #min 1000 reads for now
ASV_physeq_3 <- ps

#Remove GUD.6 as it is likely not Festuca and VIK.R.8 outlier
ps <- subset_samples(ASV_physeq_3, !sample.code %in% c("GUD.S6", "GUD.R.6", "VIK.R.8"))
ASV_physeq_3 <- ps

#Remove replicates 9 and 10, because this was a different batch and they are really weird
temp <- subset_samples(ASV_physeq_3, !sample.code %in% paste0(c(unique(sample_info_tab$location), "ULV2"), ".S", 9))
temp2 <- subset_samples(temp, !sample.code %in% paste0(c(unique(sample_info_tab$location), "ULV2"), ".S", 10))
temp3 <- subset_samples(temp2, !sample.code %in% paste0(c(unique(sample_info_tab$location), "ULV2"), ".R.", 9))
temp4 <- subset_samples(temp3, !sample.code %in% paste0(c(unique(sample_info_tab$location), "ULV2"), ".R.", 10))
ASV_physeq_3 <- temp4

#Make subsets
physeq_rhizo_3 <- subset_samples(ASV_physeq_3, compartment=="rhizosphere")
physeq_root_3 <- subset_samples(ASV_physeq_3, compartment=="root")

#Rename
rhizo_physeq_s = physeq_rhizo_3
root_physeq_s = physeq_root_3

#Save
asv.rhizo <- t(otu_table(rhizo_physeq_s)@.Data) #extract the otu table from phyloseq object
tax.rhizo <- as.data.frame(tax_table(rhizo_physeq_s)@.Data)#extract the taxonomy information
head(tax.rhizo)

asv.root <- t(otu_table(root_physeq_s)@.Data) #extract the otu table from phyloseq object
tax.root <- as.data.frame(tax_table(root_physeq_s)@.Data)#extract the taxonomy information
head(tax.root)

asv.rhizo_noprune <- otu_table(rhizo_physeq_s, taxa_are_rows=T)
asv.root_noprune <- otu_table(root_physeq_s, taxa_are_rows=T)

#Rhizo
sub_rhizo <- rarefy_even_depth(asv.rhizo_noprune, sample.size = min(sample_sums(asv.root_noprune)), rngseed = 1234)
#save(sub_rhizo, file = "rhizo_16S_rare_ss1234.RDa")
CV_rhizo_16S <- list()
bias_rhizo_16S <- list()
for (i in 1:dim(sub_rhizo)[1]) {
  CV_rhizo_16S[[paste(row.names(sub_rhizo)[i])]] <- sd(sub_rhizo[i,])/mean(sub_rhizo[i,])
  bias_rhizo_16S[[paste(row.names(sub_rhizo)[i])]] <- sqrt(12/sum(sub_rhizo[i,]))
}

CV_rhizo_16S
bias_rhizo_16S

#Root
sub_root <- rarefy_even_depth(asv.root_noprune, sample.size = min(sample_sums(asv.root_noprune)), rngseed = 1234)
#save(sub_root, file = "root_16S_rare_ss1234.RDa")
CV_root_16S <- list()
bias_root_16S <- list()
for (i in 1:dim(sub_root)[1]) {
  CV_root_16S[[paste(row.names(sub_root)[i])]] <- sd(sub_root[i,])/mean(sub_root[i,])
  bias_root_16S[[paste(row.names(sub_root)[i])]] <- sqrt(12/sum(sub_root[i,]))
}

CV_root_16S
bias_root_16S

#Make dataframe
temp <- reshape2::melt(CV_rhizo_16S)
head(temp)
temp2 <- reshape2::melt(bias_rhizo_16S)
head(temp2)
colnames(temp) <- c("SI", "ASV")
colnames(temp2) <- c("bias", "ASV")
temp3 <- merge(temp, temp2, by = c("ASV"))
temp3$SI_cor <- temp3$SI - temp3$bias
min(temp3$SI_cor) #good, no negative values

#Merge to rarefied reads
sub_rhizo <- data.frame(sub_rhizo)
sub_rhizo$ASV <- row.names(sub_rhizo)
SI_rhizo_16S <- merge(sub_rhizo, temp3, by = c("ASV"))
SI_rhizo_16S_ASV <- temp3
#save(SI_rhizo_16S_ASV, file="SI_rhizo_16S_ASV_rare_noprune_ss1234.RDa")

#Root
temp <- reshape2::melt(CV_root_16S)
head(temp)
temp2 <- reshape2::melt(bias_root_16S)
head(temp2)
colnames(temp) <- c("SI", "ASV")
colnames(temp2) <- c("bias", "ASV")
temp3 <- merge(temp, temp2, by = c("ASV"))
temp3$SI_cor <- temp3$SI - temp3$bias
min(temp3$SI_cor) #good, no negative values

#Merge to rarefied reads
sub_root <- data.frame(sub_root)
sub_root$ASV <- row.names(sub_root)
SI_root_16S <- merge(sub_root, temp3, by = c("ASV"))
SI_root_16S_ASV <- temp3
#save(SI_root_16S_ASV, file="SI_root_16S_ASV_rare_noprune_ss1234.RDa")

#Calculate community weighted mean SI per sample
#Delete Inf and NaN
SI_rhizo_16S <- SI_rhizo_16S[which(!SI_rhizo_16S$SI=="NaN"),]
SI_root_16S <- SI_root_16S[which(!SI_root_16S$SI=="NaN"),]

avg_SI_rhizo <- list()
for (i in c(2:96)){
  avg_SI_rhizo[paste(colnames(SI_rhizo_16S[i]))] <- weighted.mean(SI_rhizo_16S$SI_cor, SI_rhizo_16S[,i], na.rm=T)
}

avg_SI_rhizo

avg_SI_root <- list()
for (i in c(2:95)){
  avg_SI_root[paste(colnames(SI_root_16S[i]))] <- weighted.mean(SI_root_16S$SI_cor, SI_root_16S[,i], na.rm=T)
}

avg_SI_root 

#Merge
temp <- reshape2::melt(avg_SI_rhizo)
temp2 <- reshape2::melt(avg_SI_root)
colnames(temp) <- c("avgSI", "sample.code")
colnames(temp2) <- c("avgSI", "sample.code")
temp$compartment <- "rhizosphere"
temp2$compartment <- "root"
temp3 <- sample_data(rhizo_physeq_s)
temp4 <- sample_data(root_physeq_s)
temp3$avgSI <- NULL
temp4$avgSI <- NULL
SI_16S_rhizo <- merge(temp, data.frame(temp3)[c(1:9)], by = c("sample.code", "compartment"))
SI_16S_root <- merge(temp2, data.frame(temp4)[c(1:9)], by = c("sample.code", "compartment"))
SI_16S <- rbind(SI_16S_rhizo, SI_16S_root)
save(SI_16S_rhizo, file = "SI_16S_rhizo_rare_noprune_ss1234_2.RDa")
save(SI_16S_root, file = "SI_16S_root_rare_noprune_ss1234_2.RDa")
save(SI_16S, file = "SI_16S_both_rare_noprune_ss1234_2.RDa")

load("SI_16S_both_rare_noprune_ss1234_2.RDa")

#Make boxplots
head(SI_16S)
plot <- ggplot(data=SI_16S, aes(x=as.factor(temperature), y=avgSI, fill = as.factor(compartment)))+
  #annotate("rect", fill = "grey", alpha = 0.6, xmin = -Inf, xmax = 2012,ymin = -Inf, ymax = Inf) +
  facet_wrap(~ as.factor(precipitation)) +
  geom_boxplot() +
  #scale_shape_manual(values=c(19,1)) +
  scale_colour_manual(values=c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7"), name="Cluster")+
  scale_fill_manual(values=c("#E69F00", "#009E73", "#0072B2", "#D55E00", "#999999", "#56B4E9", "#CC79A7"), name="Compartment")+
  theme_bw() +
  theme(axis.title.y=element_text(size=11, colour = "black", margin=(margin(0,10,0,0))))+
  theme(axis.title.x=element_text(size=11, colour = "black", margin=(margin(0,10,0,0))))+
  theme(axis.text=element_text(size=10, angle = 90, hjust = 1))+
  theme(panel.grid.minor = element_blank())+
  theme(panel.grid.major = element_blank())+
  theme(strip.text.x=element_text(size=10), strip.background=element_rect(fill="grey"))
  #coord_cartesian(ylim = c(0,4)) #massive outlier
plot

plot <- ggplot(data=SI_16S, aes(x=as.factor(precipitation), y=avgSI, fill = as.factor(compartment)))+
  #annotate("rect", fill = "grey", alpha = 0.6, xmin = -Inf, xmax = 2012,ymin = -Inf, ymax = Inf) +
  facet_wrap(~ as.factor(temperature)) +
  geom_boxplot() +
  #scale_shape_manual(values=c(19,1)) +
  scale_colour_manual(values=c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7"), name="Cluster")+
  scale_fill_manual(values=c("#E69F00", "#009E73", "#0072B2", "#D55E00", "#999999", "#56B4E9", "#CC79A7"), name="Compartment")+
  theme_bw() +
  theme(axis.title.y=element_text(size=11, colour = "black", margin=(margin(0,10,0,0))))+
  theme(axis.title.x=element_text(size=11, colour = "black", margin=(margin(0,10,0,0))))+
  theme(axis.text=element_text(size=10, angle = 90, hjust = 1))+
  theme(panel.grid.minor = element_blank())+
  theme(panel.grid.major = element_blank())+
  theme(strip.text.x=element_text(size=10), strip.background=element_rect(fill="grey"))
  #coord_cartesian(ylim = c(0,4)) #massive outlier
plot
#At 6.5, SI differences between rhizo and root not that large, but at 10.5 it is really seperated?

######4 TAXA OVERLAP#####
#Create phyloseq object
ASV_physeq

library(MicEco)
plot <- ps_venn(ASV_physeq, "compartment",
                fraction = 0,
                weight = T,
                relative = F,
                plot = T,
                edges= list(col = c("#E69F00", "#009E73"), lex = 1.5),
                fill = list(fill = c("#E69F00", "#009E73"), alpha = 0.5),
                labels = list(cex = 1),
                quantities = list(cex = 1, type = c("percent")),
                main = list(label = c("Prokaryotes"), cex = 1.5)
)

plot

library(cowplot)
prow <- plot_grid(plot, labels=c("A"), align="hv", label_size=12, vjust=1.1, rel_heights = c(1,1))
prow
#save_plot("D:/Prague/4. Norway/MS/Figs/FigSX_Venn_16S.png", prow,
#          ncol = 0.8, nrow = 0.8, base_aspect_ratio = 1.2, dpi=600) #PC

#Try for the different treatments
#Subset into rhizosphere and root compartments
ASV_physeq_rhizo <- subset_samples(ASV_physeq, compartment=="rhizosphere")
ASV_physeq_root <- subset_samples(ASV_physeq, compartment=="root")

#Temperature rhizosphere
plotA <- ps_venn(ASV_physeq_rhizo, "temperature",
                 fraction = 0,
                 weight = T,
                 relative = T,
                 plot = T,
                 edges= list(col = c("#0072B2", "#E69F00", "#D55E00"), lex = 1.5),
                 fill = list(fill = c("#0072B2", "#E69F00", "#D55E00"), alpha = 0.5),
                 labels = list(cex = 1),
                 quantities = list(cex = 1, type = c("percent")),
                 main = list(label = c("Prokaryotes - rhizosphere"), cex = 1.5)
)

plotA

#Temperature root
plotB <- ps_venn(ASV_physeq_root, "temperature",
                 fraction = 0,
                 weight = T,
                 relative = T,
                 plot = T,
                 edges= list(col = c("#0072B2", "#E69F00", "#D55E00"), lex = 1.5),
                 fill = list(fill = c("#0072B2", "#E69F00", "#D55E00"), alpha = 0.5),
                 labels = list(cex = 1),
                 quantities = list(cex = 1, type = c("percent")),
                 main = list(label = c("Prokaryotes - root"), cex = 1.5)
)

plotB

#Save temperature
prow <- plot_grid(plotA, plotB, labels=c("A", "B"), align="hv", label_size=12, vjust=1.1, rel_heights = c(1,1))
prow
#save_plot("D:/Prague/4. Norway/MS/Figs/FigSX_Venn_16S_Temp.png", prow,
#          ncol = 2, nrow = 1, base_aspect_ratio = 1.2, dpi=600) #PC


#Precipitation rhizosphere
plotA <- ps_venn(ASV_physeq_rhizo, "precipitation",
                 fraction = 0,
                 weight = T,
                 relative = T,
                 plot = T,
                 edges= list(col = c("#F0E442","#CC79A7", "#999999", "#0072B2"), lex = 1.5),
                 fill = list(fill = c("#F0E442","#CC79A7", "#999999", "#0072B2"), alpha = 0.5),
                 labels = list(cex = 1),
                 quantities = list(cex = 1, type = c("percent")),
                 main = list(label = c("Prokaryotes - rhizosphere"), cex = 1.5)
)

plotA

#Precipitation root
plotB <- ps_venn(ASV_physeq_root, "precipitation",
                 fraction = 0,
                 weight = T,
                 relative = T,
                 plot = T,
                 edges= list(col = c("#F0E442","#CC79A7", "#999999", "#0072B2"), lex = 1.5),
                 fill = list(fill = c("#F0E442","#CC79A7", "#999999", "#0072B2"), alpha = 0.5),
                 labels = list(cex = 1),
                 quantities = list(cex = 1, type = c("percent")),
                 main = list(label = c("Prokaryotes - root"), cex = 1.5)
)

plotB

#Save precipitation
prow <- plot_grid(plotA, plotB, labels=c("A", "B"), align="hv", label_size=12, vjust=1.1, rel_heights = c(1,1))
prow
#save_plot("D:/Prague/4. Norway/MS/Figs/FigSX_Venn_16S_Precip.png", prow,
#          ncol = 2, nrow = 1, base_aspect_ratio = 1.2, dpi=600) #PC
